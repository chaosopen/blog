(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{351:function(v,_,t){"use strict";t.r(_);var a=t(14),r=Object(a.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"_4-3-深入理解倒排索引"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-深入理解倒排索引"}},[v._v("#")]),v._v(" 4.3 深入理解倒排索引")]),v._v(" "),_("p",[v._v("讲倒排索引之前我们先说一下正排索引。")]),v._v(" "),_("p",[v._v("以MySQL为例，在MySQL表中，每一行数据都有一个主键，查询数据会先找到ID，然后查整行数据，这种索引形式为正排索引，通过ID查value。而倒排索引恰好相反，是通过value查ID。")]),v._v(" "),_("h2",{attrs:{id:"_4-3-1-倒排索引基本原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-倒排索引基本原理"}},[v._v("#")]),v._v(" 4.3.1 倒排索引基本原理")]),v._v(" "),_("p",[v._v("举例索引数据如下：")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("文档ID")]),v._v(" "),_("th",[v._v("value")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("1")]),v._v(" "),_("td",[v._v("学习java")])]),v._v(" "),_("tr",[_("td",[v._v("2")]),v._v(" "),_("td",[v._v("学习golang 复习c")])]),v._v(" "),_("tr",[_("td",[v._v("3")]),v._v(" "),_("td",[v._v("复习java")])])])]),v._v(" "),_("p",[v._v("对文档分词，得到以下倒排索引结构")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("单词")]),v._v(" "),_("th",[v._v("文档ID集合")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("学习")]),v._v(" "),_("td",[v._v("1,2")])]),v._v(" "),_("tr",[_("td",[v._v("复习")]),v._v(" "),_("td",[v._v("2,3")])]),v._v(" "),_("tr",[_("td",[v._v("java")]),v._v(" "),_("td",[v._v("1,3")])]),v._v(" "),_("tr",[_("td",[v._v("golang")]),v._v(" "),_("td",[v._v("2")])]),v._v(" "),_("tr",[_("td",[v._v("c")]),v._v(" "),_("td",[v._v("2")])])])]),v._v(" "),_("p",[v._v("搜索 "),_("code",[v._v("java")]),v._v(" 的时候，从倒排索引匹配 词=java，找到对应文档集合查询数据")]),v._v(" "),_("ul",[_("li",[v._v("倒排索引的单词会对应1个或多个文档")]),v._v(" "),_("li",[v._v("倒排索引的单词会按照词的从小到大排序")])]),v._v(" "),_("h2",{attrs:{id:"_4-3-2-倒排索引结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-倒排索引结构"}},[v._v("#")]),v._v(" 4.3.2 倒排索引结构")]),v._v(" "),_("p",[v._v("根据概念，我们可以用一个Map来简单描述这个结构，key是单词，这部分组成了Dictionary，称为索引表。")]),v._v(" "),_("p",[v._v("另一个部分是 Postings List，称为记录表，对应上述的Map的value部分集合。")]),v._v(" "),_("p",[v._v("记录表是多个Postings组成，每个Postings包含以下信息：")]),v._v(" "),_("ul",[_("li",[v._v("文档 id（DocId, Document Id），包含单词的所有文档唯一 id，用于去正排索引中查询原始数据。")]),v._v(" "),_("li",[v._v("词频（TF，Term Frequency），记录 Term 在每篇文档中出现的次数，用于后续相关性算分。")]),v._v(" "),_("li",[v._v("位置（Position），记录 Term 在每篇文档中的分词位置（多个），用于做词语搜索（Phrase Query）。")]),v._v(" "),_("li",[v._v("偏移（Offset），记录 Term 在每篇文档的开始和结束位置，用于高亮显示等。")])]),v._v(" "),_("h2",{attrs:{id:"_4-3-3-倒排索引实现"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-3-倒排索引实现"}},[v._v("#")]),v._v(" 4.3.3 倒排索引实现")]),v._v(" "),_("p",[v._v("全文检索在海量数据的情况下需要大量存储数据，所以会有以下问题：")]),v._v(" "),_("ul",[_("li",[v._v("索引表很大，搜索字段会有几千万个单词")]),v._v(" "),_("li",[v._v("记录表会占据大量存储空间，一个单词对应几百万个文档")])]),v._v(" "),_("p",[v._v("因此使用Map存储是不靠谱的。")]),v._v(" "),_("p",[v._v("海量数据情况下，存储空间和检索性能带来了很大的问题，所以巧妙运用存储倒排索引的数据结构和算法，让倒排索引"),_("strong",[v._v("节省空间、快读快写")])]),v._v(" "),_("p",[v._v("接下来会讲解索引表和记录表，分析倒排索引的实现。")]),v._v(" "),_("h3",{attrs:{id:"索引表"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#索引表"}},[v._v("#")]),v._v(" 索引表")])])}),[],!1,null,null,null);_.default=r.exports}}]);